function fsapu (arg)

z = geteditor('RunExperiment');
if ~isempty(z), ud=get(z,'userdata'); cksds = ud.cksds;
else, error('no runexperiment. grrrrrr!'); end;

if nargin==1,
  f = gcbf;
  ud = get(f,'userdata');
  %l = getalltests(cksds);
  l = {'t00048'};
  vl = get(ud.gettests,'String'),
  nr = getallnamerefs(cksds);
  nv = get(ud.namerefs,'value'); 
% l{vl}=>vl,
% nr(nv),
  nts = get(ud.notes,'String');
  usepc = get(ud.usepc,'value');
  ps = get(ud.param,'String'); pv = get(ud.param,'value'); par = ps{pv};
  try, s = getstimscripttimestruct(cksds,vl); catch, errordlg('does not exist2.'); error('does not exist.'); end;
  try, g = getcells(cksds,nr(nv)); catch, errordlg('does not exist3.'); error('does not exist.'); end;
	%g,
  loadstr = '';
  for i=1:length(g), loadstr = [loadstr ',''' g{i} '''']; end; loadstr = loadstr(2:end);

  %['d = load(getexperimentfile(cksds),' loadstr ',''-mat'');'],
  if isempty(loadstr), errordlg('Empty data'); delete(f); error('does not exist.'); end;
  eval(['d = load(getexperimentfile(cksds),' loadstr ',''-mat'');']);
  d,
  if strcmp(par,'rev cor'),
      for i=1:length(g),
        inp.stimtime = stimtimestruct(s,1);
        inp.spikes={}; inp.cellnames = {};
        %for i=1:length(g), inp.spikes{i}=getfield(d,g{i});
        %                   inp.cellnames{i} = [g{i}];               end;
        inp.spikes{1}=getfield(d,g{i});
        inp.cellnames{1} = [g{i}];
        where.figure = figure;where.rect=[0 0 1 1]; where.units='normalized';
        orient(where.figure,'landscape');
        %set(where.figure,'inverthardcopy','off');
        global rc;
        rc = reverse_corr(inp,'default',where);
      end;
        delete(f);
  else,
    for i=1:length(g),
      inp.st=s;
      inp.spikes=getfield(d,g{i});
      inp.paramname=par;
      inp.title=[g{i}];
      where.figure=figure;where.rect=[0 0 1 1]; where.units='normalized';
      orient(where.figure,'landscape');
      %set(where.figure,'inverthardcopy','off');
      if ~usepc,
         global tc;
         tc=tuning_curve(inp,'default',where);
      else,
         inp.paramnames={par};
         global pc;
         pc=periodic_curve(inp,'default',where);
      end;
    end;
    delete(f);
  end;
  nts = [vl ' : ' nts];
  ax2 = axes('position',[0 0 1 1],'visible','off');
  text(0.5,0.02,nts,'HorizontalAlignment','center','Interpreter','none');
  %uicontrol('Parent',where.figure,'Style','text','String',nts,...
  %          'units','normalized','Position',[0.25 0.01 0.50 0.03]);%,...
            %));
else,

h0 = figure('Color',[0.8 0.8 0.8], ...
	'PaperPosition',[18 180 576 432], ...
	'PaperUnits','points', ...
	'Position',[389 229 490 314], ...
	'Tag','', ...
	'MenuBar','figure');
	settoolbar(h0,'figure');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'FontSize',12, ...
	'FontWeight','bold', ...
	'ListboxTop',0, ...
	'Position',[50.91012549212599 249.7477854330709 296.8156373031496 18.25079970472441], ...
	'String','Fast, sloppy, analysis popper-upper', ...
	'Style','text', ...
	'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[64.35808316929135 216.1278912401575 347.7257627952756 20.17193651574803], ...
	'String','Displays a quick and dirty tuning curve', ...
	'Style','text', ...
	'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[368.8582677165355 25.9353469488189 91.25399852362206 29.77762057086614], ...
	'String','Do it', ...
	'Tag','Pushbutton1','Callback','fsapu doit');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[61.47637795275591 165.2177657480315 121.0316190944882 20.17193651574803], ...
	'String','parameter:', ...
	'Style','text', ...
	'Tag','StaticText3');
param = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[197.8771  163.2966  101.8203   24.0142], ...
	'String',{'rev cor','angle','sFrequency','tFrequency','contrast','sPhaseShift','velocity','angVelocity','direction','coherence','dotsize'}, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[61.47637795275591 132.5584399606299 121.0316190944882 20.17193651574803], ...
	'String','test:', ...
	'Style','text', ...
	'Tag','StaticText3');
gettests = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'Min',1, ...
	'Position',[197.8771  132.5584  101.8203   24.0142], ...
        'FontSize',8,...
	'String','t00001', ...
	'Style','edit', ...
	'Tag','PopupMenu1', ...
	'Value',1);
%	'String',gettests(cksds,'tung',4), ...
%	'ListboxTop',0, ...
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[60.5158095472441 99.89911417322836 121.0316190944882 20.17193651574803], ...
	'String','nameref:', ...
	'Style','text', ...
	'Tag','StaticText3');
nrs = {'none'};
nr = getallnamerefs(cksds);
for i=1:length(nr), nrs{i} = [nr(i).name ' | ' int2str(nr(i).ref) ]; end;
namerefs = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[197.8771   98.9385  101.8203   24.0142], ...
        'FontSize',8,...
	'String',nrs, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
notebx=uicontrol('Parent',h0,...
	'Units','points', ...
	'BackgroundColor',0.8*[1 1 1], ...
	'ListboxTop',0, ...
	'Position',[60.5 70 120 20 ], ...
	'String','Notes:', ...
				'Style','text');
notes=uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',0.8*[1 1 1], ...
	'Min',1, ...
	'Position',[198  70 200.8203   24.0142], ...
        'FontSize',8,...
	'String','', ...
	'Style','edit', ...
	'Tag','PopupMenu1', ...
	'Value',1);

usepc=uicontrol('Parent',h0,...
        'Units','points',...
        'BackgroundColor',[0.8 0.8 0.8],...
        'String','use periodic_curve',...
        'Style','checkbox',...
        'Position',[100 30 200 24],...
        'FontSize',8,...
        'Value',0);
        
set(h0,'userdata',struct('namerefs',namerefs,'gettests',gettests,'param',param,'notes',notes,'usepc',usepc));
end;
